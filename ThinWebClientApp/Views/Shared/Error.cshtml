@model AspNetErrorModel
@{
    Page.Title = "エラー";

    string ErrorStr = ThinWebClientErrorUtil.GetFriendlyErrorMessage(Model.ErrorInfo, Page);

    // 戻り先 URL
    string url = "/";
    string id = Context.Request._GetQueryStringFirst("id");
    if (id._IsFilled())
    {
        url += "?id=" + id._MakeVerySafeAsciiOnlyNonSpaceFileName();
    }

    string jsTitle = "エラーが発生しました";

}

<div class="box">
    <div class="content">
        <article class="message is-warning">
            <div class="message-header">
                <p><i class="fas fa-exclamation-triangle"></i>&nbsp;@ErrorStr</p>
            </div>
            <div class="message-body">
                <p>以下のエラーが発生しました。<b><a href="@url">トップページ</a></b> から再試行してください。</p>
                <p><b>エラー内容:</b><BR>@ErrorStr</p>
                <p><b>エラー発生日時:</b><BR>@DateTimeOffset.Now._ToDtStr(withMSsecs: true)</p>
                <p><b>エラーが発生した処理:</b><br>@Model.ErrorPath</p>
                <p><b>リスクエスト ID:</b><br>@Model.RequestId</p>
                <p><b>Web サーバー名:</b><BR>@Model.WebServerName</p>
                <p><b>Web クライアント名:</b><BR>@Model.WebClientName</p>
            </div>
        </article>
    </div>
</div>

@section Scripts{

    <!-- Init -->
    <script>
        Main.ThinWebClient_Error_PageLoad(window, document, "@ErrorStr._JavaScriptSafeStrEncode()", "@jsTitle._JavaScriptSafeStrEncode()", "@url._JavaScriptSafeStrEncode()");
    </script>

}
